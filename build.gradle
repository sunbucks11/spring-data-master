

buildscript {
	ext { springBootVersion = '1.3.5.RELEASE' }
	repositories {
		mavenCentral()
		maven { url "http://maven.restlet.org" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.springframework:springloaded:1.2.0.RELEASE'
	}
}

allprojects {

	apply plugin: 'application'
	apply plugin: 'idea'
	apply plugin: 'eclipse'
	apply plugin: 'spring-boot'
	apply plugin: 'java'
	apply plugin: 'war'
	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
		maven { url "http://maven.restlet.org" }
	}

	configurations {
		all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	}

	dependencies {
		compile 'org.springframework.boot:spring-boot-devtools'
		compile 'org.springframework.boot:spring-boot-starter-data-jpa'
		compile 'org.springframework.boot:spring-boot-starter-security'
		compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
		compile 'org.springframework.security:spring-security-test:4.1.0.RELEASE'
		compile 'org.hibernate:hibernate-core'
		compile 'javax.servlet:javax.servlet-api'
		compile 'org.javassist:javassist'
		compile 'commons-dbcp:commons-dbcp'
		compile 'org.apache.tomcat:tomcat-dbcp:8.0.8'
		compile 'com.google.guava:guava-gwt:18.0'
		compile 'org.apache.commons:commons-lang3:3.4'
		compile 'commons-beanutils:commons-beanutils:1.9.2'
		compile 'org.hibernate:hibernate-validator'
		compile 'javax.el:javax.el-api:3.0.1-b04'
		compile 'org.jadira.usertype:usertype.extended:3.2.0.GA'
		compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.1'
		compile 'net.coobird:thumbnailator:0.4.8'
		compile 'joda-time:joda-time:2.9.4'
		
		runtime('com.h2database:h2')
		runtime('mysql:mysql-connector-java')
		
		testCompile 'org.springframework.boot:spring-boot-starter-test'
		testCompile 'junit:junit:4.12'
		testCompile "org.mockito:mockito-core"
		testCompile "org.hamcrest:hamcrest-library"

		compile ('ch.qos.logback:logback-classic:1.1.7') { exclude(module:'slf4j-api') }
	}

	springBoot {
		mainClass = 'com.nixmash.springdata.mvc.common.Application'
	}

	task getHomeDir << {
		println gradle.gradleHomeDir
	}

	idea {
		module {
			inheritOutputDirs = false
			outputDir = file("$buildDir/classes/main/")
		}
	}

	task wrapper(type: Wrapper) { gradleVersion = '2.12' }

	eclipse {
		classpath {
			containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
			containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
		}
	}
	
}
